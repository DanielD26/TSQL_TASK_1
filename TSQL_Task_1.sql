-- TASK 1
CREATE PROCEDURE MULTIPLY @NUM1 INT, @NUM2 INT AS 
BEGIN
    DECLARE @TOTAL INT
    SELECT @TOTAL = @NUM1 * @NUM2
    SELECT CONCAT('The product of ', @NUM1, ' and ', @NUM2, ' is ', @TOTAL)
END;

EXEC MULTIPLY @NUM1 = 3, @NUM2 = 2;

GO 
-- TASK 2
CREATE FUNCTION ADDS (@NUM1 INT, @NUM2 INT) RETURNS INT AS
BEGIN
    RETURN @NUM1 + @NUM2;
END;

GO

BEGIN
    DECLARE @NUM1 INT, @NUM2 INT, @TOTAL INT
    SET @NUM1 = 1
    SET @NUM2 = 3
    SET @TOTAL = dbo.ADDS(@NUM1, @NUM2);

    PRINT CONCAT('The sum of ', @NUM1, ' and ', @NUM2, ' is ', @TOTAL);
END

GO 
-- TASK 3
DROP TABLE IF EXISTS LOG;
DROP TABLE IF EXISTS ACCOUNT;
CREATE TABLE ACCOUNT(
    AcctNo      INT PRIMARY KEY
   ,Fname       NVARCHAR(100)
   ,Lname       NVARCHAR(100)
   ,CreditLimit MONEY
   ,Balance     MONEY 
);

CREATE TABLE LOG(
    OrigAcct    INT
   ,LogDateTime DATETIME
   ,RecAcct     INT
   ,Amount      MONEY
   ,FOREIGN KEY (OrigAcct) REFERENCES ACCOUNT (AcctNo)
   ,FOREIGN KEY (OrigAcct) REFERENCES ACCOUNT (AcctNo)
   ,PRIMARY KEY (OrigAcct, LogDateTime)
);

SELECT * FROM ACCOUNT;

INSERT INTO ACCOUNT VALUES (1, 'Daniel', 'Diaz', 1000, 500);
INSERT INTO ACCOUNT VALUES (2, 'Vanessa', 'Nguyen', 2000, 500);
GO 
-- TASK 3A
DROP PROCEDURE IF EXISTS TRANSFERS;
GO

CREATE PROCEDURE TRANSFERS @FROMACC INT, @TOACC INT, @AMOUNT MONEY AS
BEGIN
    DECLARE @DT DATETIME
    SET @DT = SYSDATETIME();
    UPDATE ACCOUNT SET Balance = Balance - @AMOUNT WHERE AcctNo = @FROMACC;
    UPDATE ACCOUNT SET Balance = Balance + @AMOUNT WHERE AcctNo = @TOACC;
    INSERT INTO LOG VALUES(@FROMACC, @DT, @TOACC, @AMOUNT);
END;

EXEC TRANSFERS @FROMACC = 1, @TOACC = 2, @AMOUNT = 100;